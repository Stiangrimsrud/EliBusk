{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stian\\\\Documents\\\\react-native-airbnb-clone-master\\\\airbnb\\\\app\\\\screens\\\\RangePicker.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 30%;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 20px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  border-top-width: 1px;\\n  border-top-color: \", \";\\n  background-color: white;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { CalendarList } from \"react-native-calendars\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport moment from \"moment\";\nimport * as Button from \"../components/Button\";\nimport styled from \"styled-components\";\nimport colors from \"../config/colors\";\nimport { connect } from \"react-redux\";\nimport { setStart, setEnd } from \"../store/search\";\n\nvar RangePicker = function RangePicker(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDay = _useState2[0],\n      setStartDay = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDay = _useState4[0],\n      setEndDay = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      periodDay = _useState6[0],\n      setPeriodDay = _useState6[1];\n\n  var getPeriod = function getPeriod(startTimestamp, endTimestamp) {\n    var period = {};\n    var start = moment.unix(startTimestamp);\n    var end = moment.unix(endTimestamp);\n\n    while (end.isAfter(start)) {\n      period[start.format(\"YYYY-MM-DD\")] = {\n        color: colors.red,\n        textColor: \"white\",\n        startingDay: moment(start).unix() === startTimestamp\n      };\n      start = start.add(1, \"days\");\n    }\n\n    period[end.format(\"YYYY-MM-DD\")] = {\n      color: colors.red,\n      textColor: \"white\",\n      endingDay: true\n    };\n    return period;\n  };\n\n  var setDay = function setDay(objDay) {\n    var dateString = objDay.dateString,\n        day = objDay.day,\n        month = objDay.month,\n        year = objDay.year;\n    var timestamp = moment(dateString).unix();\n\n    if (_isEmpty(startDay) || !_isEmpty(startDay) && !_isEmpty(endDay)) {\n      var period = _defineProperty({}, dateString, {\n        color: colors.red,\n        textColor: \"white\",\n        startingDay: true\n      });\n\n      var newObjDay = _objectSpread(_objectSpread({}, objDay), {}, {\n        timestamp: timestamp\n      });\n\n      setStartDay(newObjDay);\n      setPeriodDay(period);\n      setEndDay({});\n    } else {\n      var savedTimestamp = startDay.timestamp;\n\n      if (savedTimestamp > timestamp) {\n        var _period2 = getPeriod(timestamp, savedTimestamp);\n\n        setPeriodDay(_period2);\n      } else {\n        var _period3 = getPeriod(savedTimestamp, timestamp);\n\n        setPeriodDay(_period3);\n      }\n    }\n  };\n\n  var periodArrays = Object.keys(periodDay);\n\n  var onNavigate = function onNavigate() {\n    props.setStart(periodArrays[0]);\n    props.setEnd(periodArrays[periodArrays.length - 1]);\n    props.navigation.navigate(\"AddGuest\");\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(Detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(CalendarList, {\n    current: new Date(),\n    style: styles.calendar,\n    minDate: new Date(),\n    pastScrollRange: 0,\n    futureScrollRange: 12,\n    hideExtraDays: true,\n    markingType: \"period\",\n    onDayPress: setDay,\n    markedDates: periodDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), React.createElement(Next, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Button.BtnTxtUnderline, {\n    color: colors.gray,\n    label: \"\\uAC74\\uB108\\uB6F0\\uAE30\",\n    onPress: function onPress() {\n      return props.navigation.navigate(\"AddGuest\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), React.createElement(BtnContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, periodArrays.length > 1 ? React.createElement(Button.BtnContain, {\n    label: \"\\uB2E4\\uC74C\",\n    color: colors.red,\n    size: \"small\",\n    disabled: false,\n    onPress: function onPress() {\n      return onNavigate();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }) : React.createElement(Button.BtnContain, {\n    label: \"\\uB2E4\\uC74C\",\n    color: colors.lightgray,\n    size: \"small\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar Container = styled.View(_templateObject());\nvar Detail = styled.View(_templateObject2());\nvar Next = styled.View(_templateObject3(), colors.faintgray);\nvar Left = styled.View(_templateObject4());\nvar BtnContainer = styled.View(_templateObject5());\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: \"center\",\n    padding: 10,\n    backgroundColor: \"lightgrey\",\n    fontSize: 16\n  }\n});\nexport default connect(null, {\n  setStart: setStart,\n  setEnd: setEnd\n})(RangePicker);","map":{"version":3,"sources":["C:/Users/Stian/Documents/react-native-airbnb-clone-master/airbnb/app/screens/RangePicker.js"],"names":["React","useState","CalendarList","_isEmpty","moment","Button","styled","colors","connect","setStart","setEnd","RangePicker","props","startDay","setStartDay","endDay","setEndDay","periodDay","setPeriodDay","getPeriod","startTimestamp","endTimestamp","period","start","unix","end","isAfter","format","color","red","textColor","startingDay","add","endingDay","setDay","objDay","dateString","day","month","year","timestamp","newObjDay","savedTimestamp","periodArrays","Object","keys","onNavigate","length","navigation","navigate","Date","styles","calendar","gray","lightgray","Container","View","Detail","Next","faintgray","Left","BtnContainer","StyleSheet","create","marginBottom","text","textAlign","padding","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\n\n//import libraries\nimport { CalendarList } from \"react-native-calendars\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport moment from \"moment\";\n\n//import components\nimport * as Button from \"../components/Button\";\n\n//import styles and assets\nimport styled from \"styled-components\";\nimport colors from \"../config/colors\";\n\n//import redux\nimport { connect } from \"react-redux\";\nimport { setStart, setEnd } from \"../store/search\";\n\nconst RangePicker = (props) => {\n  const [startDay, setStartDay] = useState({});\n  const [endDay, setEndDay] = useState({});\n  const [periodDay, setPeriodDay] = useState({});\n\n  const getPeriod = (startTimestamp, endTimestamp) => {\n    const period = {};\n    let start = moment.unix(startTimestamp);\n    const end = moment.unix(endTimestamp);\n    while (end.isAfter(start)) {\n      period[start.format(\"YYYY-MM-DD\")] = {\n        color: colors.red,\n        textColor: \"white\",\n        startingDay: moment(start).unix() === startTimestamp,\n      };\n      start = start.add(1, \"days\");\n    }\n    period[end.format(\"YYYY-MM-DD\")] = {\n      color: colors.red,\n      textColor: \"white\",\n      endingDay: true,\n    };\n\n    return period;\n  };\n\n  const setDay = (objDay) => {\n    const { dateString, day, month, year } = objDay;\n    const timestamp = moment(dateString).unix();\n\n    if (_isEmpty(startDay) || (!_isEmpty(startDay) && !_isEmpty(endDay))) {\n      const period = {\n        [dateString]: {\n          color: colors.red,\n          textColor: \"white\",\n          // endingDay: true,\n          startingDay: true,\n        },\n      };\n      const newObjDay = { ...objDay, timestamp };\n      setStartDay(newObjDay);\n      setPeriodDay(period);\n      setEndDay({});\n    } else {\n      const { timestamp: savedTimestamp } = startDay;\n      if (savedTimestamp > timestamp) {\n        const period = getPeriod(timestamp, savedTimestamp);\n        setPeriodDay(period);\n      } else {\n        const period = getPeriod(savedTimestamp, timestamp);\n        setPeriodDay(period);\n      }\n    }\n  };\n  const periodArrays = Object.keys(periodDay);\n\n  const onNavigate = () => {\n    props.setStart(periodArrays[0]);\n    props.setEnd(periodArrays[periodArrays.length - 1]);\n    props.navigation.navigate(\"AddGuest\");\n  };\n\n  return (\n    <Container>\n      <Detail>\n        <CalendarList\n          current={new Date()}\n          style={styles.calendar}\n          minDate={new Date()}\n          pastScrollRange={0}\n          futureScrollRange={12}\n          hideExtraDays\n          markingType={\"period\"}\n          onDayPress={setDay}\n          markedDates={periodDay}\n        />\n      </Detail>\n\n      <Next>\n        <Left>\n          <Button.BtnTxtUnderline\n            color={colors.gray}\n            label=\"건너뛰기\"\n            onPress={() => props.navigation.navigate(\"AddGuest\")}\n          />\n        </Left>\n        <BtnContainer>\n          {periodArrays.length > 1 ? (\n            <Button.BtnContain\n              label=\"다음\"\n              color={colors.red}\n              size=\"small\"\n              disabled={false}\n              onPress={() => onNavigate()}\n            />\n          ) : (\n            <Button.BtnContain\n              label=\"다음\"\n              color={colors.lightgray}\n              size=\"small\"\n              disabled={true}\n            />\n          )}\n        </BtnContainer>\n      </Next>\n    </Container>\n  );\n};\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n`;\n\nconst Detail = styled.View`\n  flex: 1;\n`;\n\nconst Next = styled.View`\n  padding: 20px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-top-width: 1px;\n  border-top-color: ${colors.faintgray};\n  background-color: white;\n`;\n\nconst Left = styled.View``;\n\nconst BtnContainer = styled.View`\n  width: 30%;\n`;\n\nconst styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10,\n  },\n  text: {\n    textAlign: \"center\",\n    padding: 10,\n    backgroundColor: \"lightgrey\",\n    fontSize: 16,\n  },\n});\n\nexport default connect(null, { setStart, setEnd })(RangePicker);\n"]},"metadata":{},"sourceType":"module"}