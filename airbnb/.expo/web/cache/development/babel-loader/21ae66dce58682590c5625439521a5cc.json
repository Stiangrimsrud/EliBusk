{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stian\\\\Documents\\\\react-native-airbnb-clone-master\\\\airbnb\\\\app\\\\components\\\\ImageInput.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  border-radius: 10px;\\n  align-items: center;\\n  justify-content: center;\\n  overflow: hidden;\\n  height: 100px;\\n  width: 100px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport styled from \"styled-components\";\nimport Colors from \"../config/colors\";\nimport { EvilIcons } from \"@expo/vector-icons\";\n\nvar ImageInput = function ImageInput(_ref) {\n  var imageUri = _ref.imageUri,\n      onChangeImage = _ref.onChangeImage;\n  useEffect(function () {\n    requstPermission();\n  }, []);\n\n  var requstPermission = function requstPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requstPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"승인이 필요합니다\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress() {\n    if (!imageUri) selectImage();else Alert.alert(\"Delete\", \"사진을 삭제 하시겠습니까?\", [{\n      text: \"예\",\n      onPress: function onPress() {\n        return onChangeImage();\n      }\n    }, {\n      text: \"아니요\"\n    }]);\n  };\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 3:\n            result = _context2.sent;\n            if (!result.cancelled) onChangeImage(result.uri);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error reading an iamge\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, !imageUri && React.createElement(EvilIcons, {\n    name: \"camera\",\n    size: 40,\n    color: Colors.gray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }), imageUri && React.createElement(ImageContainer, {\n    source: {\n      uri: imageUri\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  })));\n};\n\nvar Container = styled.View(_templateObject(), Colors.faintgray);\nvar ImageContainer = styled.Image(_templateObject2());\nexport default ImageInput;","map":{"version":3,"sources":["C:/Users/Stian/Documents/react-native-airbnb-clone-master/airbnb/app/components/ImageInput.js"],"names":["React","useEffect","ImagePicker","styled","Colors","EvilIcons","ImageInput","imageUri","onChangeImage","requstPermission","requestCameraRollPermissionsAsync","granted","alert","handlePress","selectImage","Alert","text","onPress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","quality","result","cancelled","uri","console","log","gray","Container","View","faintgray","ImageContainer","Image"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAClDP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGP,WAAW,CAACQ,iCAAZ,EADH;;AAAA;AAAA;AACfC,YAAAA,OADe,yBACfA,OADe;AAEvB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,WAAD,CAAL;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAKA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI,CAACN,QAAL,EAAeO,WAAW,GAA1B,KAEEC,KAAK,CAACH,KAAN,CAAY,QAAZ,EAAsB,gBAAtB,EAAwC,CACtC;AAAEI,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,OAAO,EAAE;AAAA,eAAMT,aAAa,EAAnB;AAAA;AAAtB,KADsC,EAEtC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAFsC,CAAxC;AAIH,GAPD;;AASA,MAAMF,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKZ,WAAW,CAACgB,uBAAZ,CAAoC;AACvDC,cAAAA,UAAU,EAAEjB,WAAW,CAACkB,gBAAZ,CAA6BC,MADc;AAEvDC,cAAAA,OAAO,EAAE;AAF8C,aAApC,CAFL;;AAAA;AAEVC,YAAAA,MAFU;AAMhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuBhB,aAAa,CAACe,MAAM,CAACE,GAAR,CAAb;AANP;AAAA;;AAAA;AAAA;AAAA;AAQhBC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAYA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEd,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,QAAD,IAAa,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAmC,IAAA,KAAK,EAAEH,MAAM,CAACwB,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEGrB,QAAQ,IAAI,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAE;AAAEkB,MAAAA,GAAG,EAAElB;AAAP,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,CADF,CADF;AAQD,CAvCD;;AAyCA,IAAMsB,SAAS,GAAG1B,MAAM,CAAC2B,IAAV,oBACO1B,MAAM,CAAC2B,SADd,CAAf;AAUA,IAAMC,cAAc,GAAG7B,MAAM,CAAC8B,KAAV,oBAApB;AAKA,eAAe3B,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Image, TouchableWithoutFeedback, Alert } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\n//import styles and assets\nimport styled from \"styled-components\";\nimport Colors from \"../config/colors\";\nimport { EvilIcons } from \"@expo/vector-icons\";\n\nconst ImageInput = ({ imageUri, onChangeImage }) => {\n  useEffect(() => {\n    requstPermission();\n  }, []);\n\n  const requstPermission = async () => {\n    const { granted } = await ImagePicker.requestCameraRollPermissionsAsync();\n    if (!granted) alert(\"승인이 필요합니다\");\n  };\n\n  const handlePress = () => {\n    if (!imageUri) selectImage();\n    else\n      Alert.alert(\"Delete\", \"사진을 삭제 하시겠습니까?\", [\n        { text: \"예\", onPress: () => onChangeImage() },\n        { text: \"아니요\" },\n      ]);\n  };\n\n  const selectImage = async () => {\n    try {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        quality: 0.5,\n      });\n      if (!result.cancelled) onChangeImage(result.uri);\n    } catch (error) {\n      console.log(\"error reading an iamge\");\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={handlePress}>\n      <Container>\n        {!imageUri && <EvilIcons name=\"camera\" size={40} color={Colors.gray} />}\n        {imageUri && <ImageContainer source={{ uri: imageUri }} />}\n      </Container>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst Container = styled.View`\n  background-color: ${Colors.faintgray};\n  border-radius: 10px;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  height: 100px;\n  width: 100px;\n`;\n\nconst ImageContainer = styled.Image`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default ImageInput;\n"]},"metadata":{},"sourceType":"module"}