{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stian\\\\Documents\\\\react-native-airbnb-clone-master\\\\airbnb\\\\app\\\\components\\\\List.js\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  justify-content: space-between;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 34px;\\n  height: 34px;\\n  border-radius: 17px;\\n  margin-right: 10px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 34px;\\n  height: 34px;\\n  border-radius: 17px;\\n  margin-right: 10px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 46px;\\n  height: 46px;\\n  border-radius: 23px;\\n  margin-right: 12px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 46px;\\n  height: 46px;\\n  border-radius: 23px;\\n  margin-right: 12px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  width: 70px;\\n  height: 70px;\\n  border-radius: 35px;\\n  margin-right: 15px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 70px;\\n  height: 70px;\\n  border-radius: 35px;\\n  margin-right: 15px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  width: 35px;\\n  height: 35px;\\n  background-color: \", \";\\n  border-radius: 8px;\\n  border: 1px solid \", \";\\n  margin-right: 15px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: white;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 20px 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\nimport { AntDesign, EvilIcons, MaterialIcons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport styled from \"styled-components\";\nimport * as Typography from \"../config/Typography\";\nimport colors from \"../config/colors\";\nexport var Default = function Default(_ref) {\n  var containedicon = _ref.containedicon,\n      icon = _ref.icon,\n      secondary = _ref.secondary,\n      title = _ref.title,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableHighlight, {\n    underlayColor: colors.lightgray,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, containedicon && React.createElement(IconContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialIcons, {\n    name: containedicon,\n    size: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  })), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Typography.Sub1, {\n    color: colors.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, title), secondary && React.createElement(Typography.P, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, secondary)), icon && React.createElement(MaterialCommunityIcons, {\n    name: icon,\n    size: 24,\n    style: {\n      color: colors.gray\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })));\n};\nexport var UserList = function UserList(_ref2) {\n  var image = _ref2.image,\n      imagesmall = _ref2.imagesmall,\n      imagexsmall = _ref2.imagexsmall,\n      meta = _ref2.meta,\n      onPress = _ref2.onPress,\n      secondary = _ref2.secondary,\n      title = _ref2.title,\n      RightActions = _ref2.RightActions;\n  return React.createElement(Swipeable, {\n    renderRightActions: RightActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: colors.faintgray,\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, image ? React.createElement(Avatar, {\n    source: {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }) : imagesmall ? React.createElement(AvatarSmall, {\n    source: {\n      uri: imagesmall\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }) : imagesmall === null ? React.createElement(AvatarSmallEmpty, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, React.createElement(AntDesign, {\n    name: \"user\",\n    size: 26,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })) : imagexsmall ? React.createElement(AvatarXsmall, {\n    source: {\n      uri: imagexsmall\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }) : imagexsmall === null ? React.createElement(AvatarXsmallEmpty, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, React.createElement(AntDesign, {\n    name: \"user\",\n    size: 26,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })) : React.createElement(AvatarEmpty, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, React.createElement(AntDesign, {\n    name: \"user\",\n    size: 26,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(FirstLine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, React.createElement(Typography.Sub1, {\n    color: colors.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, title), React.createElement(Typography.SP, {\n    color: colors.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, meta)), secondary && React.createElement(Typography.P, {\n    numberOfLines: 1,\n    color: colors.gray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, secondary))))));\n};\nvar Container = styled.View(_templateObject());\nvar TextContainer = styled.View(_templateObject2());\nvar IconContainer = styled.View(_templateObject3(), colors.faintgray, colors.lightgray);\nvar Avatar = styled.Image(_templateObject4());\nvar AvatarEmpty = styled.View(_templateObject5(), colors.lightgray);\nvar AvatarSmall = styled.Image(_templateObject6(), colors.lightgray);\nvar AvatarSmallEmpty = styled.View(_templateObject7(), colors.lightgray);\nvar AvatarXsmall = styled.Image(_templateObject8(), colors.lightgray);\nvar AvatarXsmallEmpty = styled.View(_templateObject9(), colors.lightgray);\nvar FirstLine = styled.View(_templateObject10());","map":{"version":3,"sources":["C:/Users/Stian/Documents/react-native-airbnb-clone-master/airbnb/app/components/List.js"],"names":["React","Swipeable","AntDesign","EvilIcons","MaterialIcons","MaterialCommunityIcons","styled","Typography","colors","Default","containedicon","icon","secondary","title","onPress","lightgray","black","color","gray","UserList","image","imagesmall","imagexsmall","meta","RightActions","faintgray","uri","Container","View","TextContainer","IconContainer","Avatar","Image","AvatarEmpty","AvatarSmall","AvatarSmallEmpty","AvatarXsmall","AvatarXsmallEmpty","FirstLine"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, TouchableHighlight } from \"react-native\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\n\nimport {\n  AntDesign,\n  EvilIcons,\n  MaterialIcons,\n  MaterialCommunityIcons,\n} from \"@expo/vector-icons\";\nimport styled from \"styled-components\";\nimport * as Typography from \"../config/Typography\";\nimport colors from \"../config/colors\";\n\nexport const Default = ({ containedicon, icon, secondary, title, onPress }) => {\n  return (\n    <TouchableHighlight underlayColor={colors.lightgray} onPress={onPress}>\n      <Container>\n        {containedicon && (\n          <IconContainer>\n            <MaterialIcons name={containedicon} size={18} />\n          </IconContainer>\n        )}\n        <TextContainer>\n          <Typography.Sub1 color={colors.black}>{title}</Typography.Sub1>\n          {secondary && <Typography.P>{secondary}</Typography.P>}\n        </TextContainer>\n        {icon && (\n          <MaterialCommunityIcons\n            name={icon}\n            size={24}\n            style={{ color: colors.gray }}\n          />\n        )}\n      </Container>\n    </TouchableHighlight>\n  );\n};\n\nexport const UserList = ({\n  image,\n  imagesmall,\n  imagexsmall,\n  meta,\n  onPress,\n  secondary,\n  title,\n  RightActions,\n}) => {\n  return (\n    <Swipeable renderRightActions={RightActions}>\n      <TouchableHighlight underlayColor={colors.faintgray} onPress={onPress}>\n        <View>\n          <Container>\n            {image ? (\n              <Avatar source={{ uri: image }} />\n            ) : imagesmall ? (\n              <AvatarSmall source={{ uri: imagesmall }} />\n            ) : imagesmall === null ? (\n              <AvatarSmallEmpty>\n                <AntDesign name=\"user\" size={26} color=\"white\" />\n              </AvatarSmallEmpty>\n            ) : imagexsmall ? (\n              <AvatarXsmall source={{ uri: imagexsmall }} />\n            ) : imagexsmall === null ? (\n              <AvatarXsmallEmpty>\n                <AntDesign name=\"user\" size={26} color=\"white\" />\n              </AvatarXsmallEmpty>\n            ) : (\n              <AvatarEmpty>\n                <AntDesign name=\"user\" size={26} color=\"white\" />\n              </AvatarEmpty>\n            )}\n            <TextContainer>\n              <FirstLine>\n                <Typography.Sub1 color={colors.black}>{title}</Typography.Sub1>\n                <Typography.SP color={colors.black}>{meta}</Typography.SP>\n              </FirstLine>\n              {secondary && (\n                <Typography.P numberOfLines={1} color={colors.gray}>\n                  {secondary}\n                </Typography.P>\n              )}\n            </TextContainer>\n          </Container>\n        </View>\n      </TouchableHighlight>\n    </Swipeable>\n  );\n};\n\nconst Container = styled.View`\n  background-color: white;\n  flex-direction: row;\n  align-items: center;\n  padding: 20px 0;\n`;\n\nconst TextContainer = styled.View`\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst IconContainer = styled.View`\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  background-color: ${colors.faintgray};\n  border-radius: 8px;\n  border: 1px solid ${colors.lightgray};\n  margin-right: 15px;\n`;\n\nconst Avatar = styled.Image`\n  width: 70px;\n  height: 70px;\n  border-radius: 35px;\n  margin-right: 15px;\n`;\n\nconst AvatarEmpty = styled.View`\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  height: 70px;\n  border-radius: 35px;\n  margin-right: 15px;\n  background-color: ${colors.lightgray};\n`;\n\nconst AvatarSmall = styled.Image`\n  width: 46px;\n  height: 46px;\n  border-radius: 23px;\n  margin-right: 12px;\n  background-color: ${colors.lightgray};\n`;\n\nconst AvatarSmallEmpty = styled.View`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 46px;\n  height: 46px;\n  border-radius: 23px;\n  margin-right: 12px;\n  background-color: ${colors.lightgray};\n`;\n\nconst AvatarXsmall = styled.Image`\n  width: 34px;\n  height: 34px;\n  border-radius: 17px;\n  margin-right: 10px;\n  background-color: ${colors.lightgray};\n`;\n\nconst AvatarXsmallEmpty = styled.View`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 34px;\n  height: 34px;\n  border-radius: 17px;\n  margin-right: 10px;\n  background-color: ${colors.lightgray};\n`;\n\nconst FirstLine = styled.View`\n  flex-direction: row;\n  justify-content: space-between;\n`;\n"]},"metadata":{},"sourceType":"module"}