{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stian\\\\Documents\\\\react-native-airbnb-clone-master\\\\airbnb\\\\app\\\\screens\\\\ListMap.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  margin-top: \", \";\\n  margin-left: 20px;\\n  background-color: white;\\n  border-radius: 6px;\\n  padding: 4px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: white;\\n  border-radius: 20px;\\n  padding: 6px 16px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: black;\\n  border-radius: 20px;\\n  padding: 6px 16px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  align-self: flex-start;\\n  background-color: white;\\n  border-radius: 6px;\\n  border: 0.5px solid #cccccc;\\n  padding: 15px;\\n  width: 150px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport MapCard from \"../components/MapCard\";\nimport styled from \"styled-components\";\nimport { EvilIcons } from \"@expo/vector-icons\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CARD_HEIGHT = 120;\nvar CARD_WIDTH = width * 0.8;\nvar CARD_INSET = width * 0.1;\n\nvar ListMap = function ListMap(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      closeBtn = _ref.closeBtn,\n      showListing = _ref.showListing;\n  var rooms = route.params;\n  var initialState = {\n    rooms: rooms,\n    region: {\n      latitude: 33.392358,\n      longitude: 126.535918,\n      latitudeDelta: 0.7,\n      longitudeDelta: 0.7\n    }\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var mapIndex = 0;\n  var mapAnimation = new Animated.Value(0);\n  useEffect(function () {\n    mapAnimation.addListener(function (_ref2) {\n      var value = _ref2.value;\n      var index = Math.floor(value / CARD_WIDTH + 0.3);\n\n      if (index >= state.rooms.length) {\n        index = state.rooms.length - 1;\n      }\n\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n      var regionTimeout = setTimeout(function () {\n        if (mapIndex !== index) {\n          mapIndex = index;\n          var coordinate = state.rooms[index].coordinate;\n\n          _map.current.animateToRegion(_objectSpread(_objectSpread({}, coordinate), {}, {\n            latitudeDelta: state.region.latitudeDelta,\n            longitudeDelta: state.region.longitudeDelta\n          }), 350);\n        }\n      }, 10);\n    });\n  });\n  var interpolations = state.rooms.map(function (room, index) {\n    var inputRange = [(index - 1) * CARD_WIDTH, index * CARD_WIDTH, (index + 1) * CARD_WIDTH];\n    var scale = mapAnimation.interpolate({\n      inputRange: inputRange,\n      outputRange: [1, 1.25, 1],\n      extrapolate: \"clamp\"\n    });\n    return {\n      scale: scale\n    };\n  });\n\n  var onMarkerPress = function onMarkerPress(mapEventData) {\n    var markerID = mapEventData._targetInst.return.key;\n    var x = markerID * CARD_WIDTH + markerID * 20;\n\n    if (Platform.OS === \"ios\") {\n      x = x - CARD_INSET;\n    }\n\n    _scrollView.current.getNode().scrollTo({\n      x: x,\n      y: 0,\n      animated: true\n    });\n  };\n\n  var _map = useRef(null);\n\n  var _scrollView = useRef(null);\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    provider: PROVIDER_GOOGLE,\n    ref: _map,\n    style: styles.map,\n    initialRegion: state.region,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, state.rooms.map(function (room, index) {\n    var scaleStyle = {\n      transform: [{\n        scale: interpolations[index].scale\n      }]\n    };\n    return React.createElement(Marker, {\n      key: index,\n      coordinate: room.coordinate,\n      onPress: function onPress(e) {\n        return onMarkerPress(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: [{\n        borderRadius: 20,\n        paddingVertical: 6,\n        paddingHorizontal: 16\n      }, scaleStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, React.createElement(CustomMarker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"$\", room.price))));\n  })), React.createElement(CloseBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(EvilIcons, {\n    name: \"close\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }))), React.createElement(Animated.ScrollView, {\n    ref: _scrollView,\n    horizontal: true,\n    scrollEventThrottle: 1,\n    showsHorizontalScrollIndicator: false,\n    style: styles.scrollView,\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: CARD_WIDTH + 20,\n    snapToAlignment: \"center\",\n    contentInset: {\n      top: 0,\n      left: CARD_INSET,\n      bottom: 0,\n      right: CARD_INSET\n    },\n    contentContainerStyle: {\n      marginHorizontal: Platform.OS === \"android\" ? CARD_INSET : 0\n    },\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: mapAnimation\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, state.rooms.map(function (room, index) {\n    return React.createElement(MapCard, {\n      key: index,\n      image: room.images[0],\n      property: room.property_type,\n      title: room.title,\n      subtitle: room.price,\n      rating: room.rating,\n      reviews: room.reviews,\n      onPress: function onPress() {\n        return navigation.navigate(\"Details\", room);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nvar Container = styled.View(_templateObject());\nvar Bubble = styled.View(_templateObject2());\nvar CustomMarkerCurrent = styled.View(_templateObject3());\nvar CustomMarker = styled.View(_templateObject4());\nvar CloseBtn = styled.View(_templateObject5(), Platform.OS === \"ios\" ? \"40px\" : \"40px\");\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\"\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\"\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10\n  }\n});\nexport default ListMap;","map":{"version":3,"sources":["C:/Users/Stian/Documents/react-native-airbnb-clone-master/airbnb/app/screens/ListMap.js"],"names":["React","useState","useEffect","useRef","MapView","PROVIDER_GOOGLE","Marker","MapCard","styled","EvilIcons","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","CARD_INSET","ListMap","navigation","route","closeBtn","showListing","rooms","params","initialState","region","latitude","longitude","latitudeDelta","longitudeDelta","state","setState","mapIndex","mapAnimation","Animated","Value","addListener","value","index","Math","floor","length","clearTimeout","regionTimeout","setTimeout","coordinate","_map","current","animateToRegion","interpolations","map","room","inputRange","scale","interpolate","outputRange","extrapolate","onMarkerPress","mapEventData","markerID","_targetInst","return","key","x","Platform","OS","_scrollView","getNode","scrollTo","y","animated","styles","scaleStyle","transform","e","borderRadius","paddingVertical","paddingHorizontal","price","goBack","scrollView","top","left","bottom","right","marginHorizontal","event","nativeEvent","contentOffset","useNativeDriver","images","property_type","title","rating","reviews","navigate","Container","View","Bubble","CustomMarkerCurrent","CustomMarker","CloseBtn","StyleSheet","create","flex","card","backgroundColor","borderTopLeftRadius","borderTopRightRadius","overflow","cardImage","alignSelf","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  Dimensions,\n  Text,\n  Platform,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\n\n//import components\nimport MapCard from \"../components/MapCard\";\n\n//import styles and assets\nimport styled from \"styled-components\";\nimport { EvilIcons } from \"@expo/vector-icons\";\n\n//import data\n// import { rooms } from \"../data/testdata\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst CARD_HEIGHT = 120;\nconst CARD_WIDTH = width * 0.8;\nconst CARD_INSET = width * 0.1;\n\nconst ListMap = ({ navigation, route, closeBtn, showListing }) => {\n  const rooms = route.params;\n\n  const initialState = {\n    rooms,\n    region: {\n      latitude: 33.392358,\n      longitude: 126.535918,\n      latitudeDelta: 0.7,\n      longitudeDelta: 0.7,\n    },\n  };\n\n  const [state, setState] = useState(initialState);\n\n  let mapIndex = 0;\n  let mapAnimation = new Animated.Value(0);\n\n  useEffect(() => {\n    mapAnimation.addListener(({ value }) => {\n      let index = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item\n      if (index >= state.rooms.length) {\n        index = state.rooms.length - 1;\n      }\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n\n      const regionTimeout = setTimeout(() => {\n        if (mapIndex !== index) {\n          mapIndex = index;\n          const { coordinate } = state.rooms[index];\n          _map.current.animateToRegion(\n            {\n              ...coordinate,\n              latitudeDelta: state.region.latitudeDelta,\n              longitudeDelta: state.region.longitudeDelta,\n            },\n            350\n          );\n        }\n      }, 10);\n    });\n  });\n\n  const interpolations = state.rooms.map((room, index) => {\n    const inputRange = [\n      (index - 1) * CARD_WIDTH,\n      index * CARD_WIDTH,\n      (index + 1) * CARD_WIDTH,\n    ];\n\n    const scale = mapAnimation.interpolate({\n      inputRange,\n      outputRange: [1, 1.25, 1],\n      extrapolate: \"clamp\",\n    });\n\n    return { scale };\n  });\n\n  const onMarkerPress = (mapEventData) => {\n    const markerID = mapEventData._targetInst.return.key;\n\n    let x = markerID * CARD_WIDTH + markerID * 20;\n    if (Platform.OS === \"ios\") {\n      x = x - CARD_INSET;\n    }\n\n    _scrollView.current.getNode().scrollTo({ x: x, y: 0, animated: true });\n  };\n\n  const _map = useRef(null);\n  const _scrollView = useRef(null);\n\n  return (\n    <Container>\n      <MapView\n        provider={PROVIDER_GOOGLE}\n        ref={_map}\n        style={styles.map}\n        initialRegion={state.region}\n      >\n        {state.rooms.map((room, index) => {\n          const scaleStyle = {\n            transform: [\n              {\n                scale: interpolations[index].scale,\n              },\n            ],\n          };\n          return (\n            <Marker\n              key={index}\n              coordinate={room.coordinate}\n              onPress={(e) => onMarkerPress(e)}\n            >\n              <Animated.View\n                style={[\n                  {\n                    borderRadius: 20,\n                    paddingVertical: 6,\n                    paddingHorizontal: 16,\n                  },\n                  scaleStyle,\n                ]}\n              >\n                <CustomMarker>\n                  <Text>${room.price}</Text>\n                </CustomMarker>\n              </Animated.View>\n            </Marker>\n          );\n        })}\n      </MapView>\n\n      <CloseBtn>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <EvilIcons name=\"close\" size={30} />\n        </TouchableOpacity>\n      </CloseBtn>\n\n      <Animated.ScrollView\n        ref={_scrollView}\n        horizontal\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        style={styles.scrollView}\n        pagingEnabled\n        decelerationRate={0}\n        snapToInterval={CARD_WIDTH + 20}\n        snapToAlignment=\"center\"\n        contentInset={{\n          top: 0,\n          left: CARD_INSET,\n          bottom: 0,\n          right: CARD_INSET,\n        }}\n        contentContainerStyle={{\n          marginHorizontal: Platform.OS === \"android\" ? CARD_INSET : 0,\n        }}\n        onScroll={Animated.event(\n          [\n            {\n              nativeEvent: {\n                contentOffset: {\n                  x: mapAnimation,\n                },\n              },\n            },\n          ],\n          { useNativeDriver: true }\n        )}\n      >\n        {state.rooms.map((room, index) => (\n          <MapCard\n            key={index}\n            image={room.images[0]}\n            property={room.property_type}\n            title={room.title}\n            subtitle={room.price}\n            rating={room.rating}\n            reviews={room.reviews}\n            onPress={() => navigation.navigate(\"Details\", room)} //pass room info?\n          />\n        ))}\n      </Animated.ScrollView>\n    </Container>\n  );\n};\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n`;\n\nconst Bubble = styled.View`\n  flex-direction: row;\n  align-self: flex-start;\n  background-color: white;\n  border-radius: 6px;\n  border: 0.5px solid #cccccc;\n  padding: 15px;\n  width: 150px;\n`;\n\nconst CustomMarkerCurrent = styled.View`\n  background-color: black;\n  border-radius: 20px;\n  padding: 6px 16px;\n`;\n\nconst CustomMarker = styled.View`\n  background-color: white;\n  border-radius: 20px;\n  padding: 6px 16px;\n`;\n\nconst CloseBtn = styled.View`\n  position: absolute;\n  margin-top: ${Platform.OS === \"ios\" ? \"40px\" : \"40px\"};\n  margin-left: 20px;\n  background-color: white;\n  border-radius: 6px;\n  padding: 4px;\n`;\n\nconst styles = StyleSheet.create({\n  map: {\n    flex: 1,\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n  },\n});\n\nexport default ListMap;\n"]},"metadata":{},"sourceType":"module"}