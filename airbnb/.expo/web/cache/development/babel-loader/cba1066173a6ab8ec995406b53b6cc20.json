{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stian\\\\Documents\\\\react-native-airbnb-clone-master\\\\airbnb\\\\app\\\\components\\\\AppPicker.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: 100%;\\n  padding-top: 100px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  margin-top: \", \";\\n  margin-left: 20px;\\n  border-radius: 6px;\\n  padding: 4px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 100%;\\n  border: 1px solid \", \";\\n  border-radius: 8px;\\n  padding: 15px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeScreen from \"./SafeScreen\";\nimport PickerItem from \"./PickerItem\";\nimport styled from \"styled-components\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport { P } from \"../config/Typography\";\nimport Colors from \"../config/colors\";\n\nvar AppPicker = function AppPicker(_ref) {\n  var icon = _ref.icon,\n      placeholder = _ref.placeholder,\n      items = _ref.items,\n      onSelectItem = _ref.onSelectItem,\n      selectedItem = _ref.selectedItem;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openOptions = _useState2[0],\n      setOpenoptions = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setOpenoptions(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, selectedItem ? selectedItem.label : React.createElement(P, {\n    colors: Colors.gray,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, placeholder)), React.createElement(EvilIcons, {\n    name: icon,\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))), React.createElement(Modal, {\n    visible: openOptions,\n    animationType: \"slide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(ModalContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(CloseBtn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setOpenoptions(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, React.createElement(EvilIcons, {\n    name: \"close\",\n    size: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }))), React.createElement(OptionsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.value.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PickerItem, {\n        label: item.label,\n        icon: item.icon,\n        onPress: function onPress() {\n          setOpenoptions(false);\n          onSelectItem(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nvar Container = styled.View(_templateObject(), Colors.lightgray);\nvar ModalContainer = styled.View(_templateObject2());\nvar CloseBtn = styled.View(_templateObject3(), Platform.OS === \"ios\" ? \"40px\" : \"40px\");\nvar OptionsWrapper = styled.View(_templateObject4());\nexport default AppPicker;","map":{"version":3,"sources":["C:/Users/Stian/Documents/react-native-airbnb-clone-master/airbnb/app/components/AppPicker.js"],"names":["React","useState","SafeScreen","PickerItem","styled","EvilIcons","P","Colors","AppPicker","icon","placeholder","items","onSelectItem","selectedItem","openOptions","setOpenoptions","label","gray","flexGrow","item","value","toString","Container","View","lightgray","ModalContainer","CloseBtn","Platform","OS","OptionsWrapper"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n  FlatList,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\n\n//import components\nimport SafeScreen from \"./SafeScreen\";\nimport PickerItem from \"./PickerItem\";\n\n//import styles and asses\nimport styled from \"styled-components\";\nimport { EvilIcons } from \"@expo/vector-icons\";\nimport { P } from \"../config/Typography\";\nimport Colors from \"../config/colors\";\n\nconst AppPicker = ({\n  icon,\n  placeholder,\n  items,\n  onSelectItem,\n  selectedItem,\n}) => {\n  const [openOptions, setOpenoptions] = useState(false);\n\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => setOpenoptions(true)}>\n        <Container>\n          <Text>\n            {selectedItem ? (\n              selectedItem.label\n            ) : (\n              <P colors={Colors.gray}>{placeholder}</P>\n            )}\n          </Text>\n          <EvilIcons name={icon} size={20} />\n        </Container>\n      </TouchableWithoutFeedback>\n      <Modal visible={openOptions} animationType=\"slide\">\n        <SafeScreen>\n          <ModalContainer>\n            <CloseBtn>\n              <TouchableOpacity onPress={() => setOpenoptions(false)}>\n                <EvilIcons name=\"close\" size={30} />\n              </TouchableOpacity>\n            </CloseBtn>\n            {/* <Button title=\"close\" onPress={() => setOpenoptions(false)} /> */}\n            <OptionsWrapper>\n              <FlatList\n                contentContainerStyle={{ flexGrow: 1 }}\n                data={items}\n                keyExtractor={(item) => item.value.toString()}\n                renderItem={({ item }) => (\n                  <PickerItem\n                    label={item.label}\n                    icon={item.icon}\n                    onPress={() => {\n                      setOpenoptions(false);\n                      onSelectItem(item);\n                    }}\n                  />\n                )}\n              />\n            </OptionsWrapper>\n          </ModalContainer>\n        </SafeScreen>\n      </Modal>\n    </>\n  );\n};\n\nconst Container = styled.View`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  border: 1px solid ${Colors.lightgray};\n  border-radius: 8px;\n  padding: 15px;\n`;\n\nconst ModalContainer = styled.View``;\n\nconst CloseBtn = styled.View`\n  position: absolute;\n  margin-top: ${Platform.OS === \"ios\" ? \"40px\" : \"40px\"};\n  margin-left: 20px;\n  border-radius: 6px;\n  padding: 4px;\n`;\n\nconst OptionsWrapper = styled.View`\n  height: 100%;\n  padding-top: 100px;\n`;\n\nexport default AppPicker;\n"]},"metadata":{},"sourceType":"module"}