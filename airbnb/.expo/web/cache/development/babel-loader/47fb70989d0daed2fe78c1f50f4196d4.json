{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stian\\\\Documents\\\\react-native-airbnb-clone-master\\\\airbnb\\\\app\\\\screens\\\\HostingStep3.js\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin: 20px 0;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 30%;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 20px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  border-top-width: 1px;\\n  border-top-color: \", \";\\n  background-color: white;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  padding: 24px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Location from \"expo-location\";\nimport AppForm from \"../components/forms/AppForm\";\nimport LocationPicker from \"../components/LocationPicker\";\nimport * as Button from \"../components/Button\";\nimport { DefaultInput } from \"../components/forms/AppInput\";\nimport styled from \"styled-components\";\nimport { H } from \"../config/Typography\";\nimport colors from \"../config/colors\";\nimport { connect } from \"react-redux\";\nimport { setCurrLocation, setRevGeoCode } from \"../store/host\";\nvar keyboardVerticalOffset = Platform.OS === \"ios\" ? 80 : 80;\n\nvar HostingStep3 = function HostingStep3(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var getAddress = function getAddress(location) {\n    var addy;\n    return _regeneratorRuntime.async(function getAddress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync(location));\n\n          case 2:\n            addy = _context.sent;\n            console.log(addy);\n            setAddress(addy);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, granted, _await$Location$getLa, _await$Location$getLa2, latitude, longitude;\n\n    return _regeneratorRuntime.async(function getLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context2.sent;\n            granted = _await$Location$reque.granted;\n\n            if (granted) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(Location.getLastKnownPositionAsync());\n\n          case 8:\n            _await$Location$getLa = _context2.sent;\n            _await$Location$getLa2 = _await$Location$getLa.coords;\n            latitude = _await$Location$getLa2.latitude;\n            longitude = _await$Location$getLa2.longitude;\n            setLocation({\n              latitude: latitude,\n              longitude: longitude\n            });\n            location && getAddress({\n              latitude: latitude,\n              longitude: longitude\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCurrLocation = function getCurrLocation() {\n    getLocation();\n  };\n\n  var setNewAddress = function setNewAddress(text, name) {\n    var newArray = _toConsumableArray(address);\n\n    var newAddress = _objectSpread({}, newArray[0]);\n\n    newAddress[name] = text;\n    newArray[0] = newAddress;\n    setAddress(newArray);\n  };\n\n  var onNavigate = function onNavigate() {\n    props.setCurrLocation(location);\n    props.setRevGeoCode(address[0]);\n    props.navigation.navigate(\"HostingStep4\");\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: \"padding\",\n    keyboardVerticalOffset: keyboardVerticalOffset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(H, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"\\uC219\\uC18C\\uAC00 \\uC5B4\\uB514\\uC5D0 \\uC788\\uB098\\uC694?\"), React.createElement(AppForm, {\n    initialValues: {\n      name: \"\",\n      price: \"\",\n      description: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Step, {\n    style: {\n      paddingTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(Button.BtnText, {\n    label: \"\\uD604\\uC7AC\\uC704\\uCE58 \\uC0AC\\uC6A9\\uD558\\uAE30\",\n    color: colors.red,\n    onPress: function onPress() {\n      return getCurrLocation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  })), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"\\uAD6D\\uAC00/\\uC9C0\\uC5ED\"), React.createElement(DefaultInput, {\n    name: \"country\",\n    value: address[0] && address[0].country,\n    onChangeText: function onChangeText(text) {\n      return setNewAddress(text, \"country\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"\\uC8FC\"), React.createElement(DefaultInput, {\n    name: \"region\",\n    value: address[0] && address[0].region,\n    onChangeText: function onChangeText(text) {\n      return setNewAddress(text, \"region\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"\\uC2DC/\\uAD70/\\uAD6C\"), React.createElement(DefaultInput, {\n    name: \"city\",\n    value: address[0] && address[0].city,\n    onChangeText: function onChangeText(text) {\n      return setNewAddress(text, \"city\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"\\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\"), React.createElement(DefaultInput, {\n    name: \"name\",\n    value: address[0] && address[0].name,\n    onChangeText: function onChangeText(text) {\n      return setNewAddress(text, \"name\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })), React.createElement(Step, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"\\uC6B0\\uD3B8\\uBC88\\uD638\"), React.createElement(DefaultInput, {\n    name: \"postalCode\",\n    value: address[0] && address[0].postalCode,\n    onChangeText: function onChangeText(text) {\n      return setNewAddress(text, \"postalCode\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }))))), React.createElement(Next, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(Left, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), React.createElement(BtnContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Button.BtnContain, {\n    label: \"\\uB2E4\\uC74C\",\n    color: colors.red,\n    size: \"small\",\n    onPress: function onPress() {\n      return onNavigate();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar Container = styled.View(_templateObject());\nvar Main = styled.ScrollView(_templateObject2());\nvar Next = styled.View(_templateObject3(), colors.faintgray);\nvar Left = styled.View(_templateObject4());\nvar BtnContainer = styled.View(_templateObject5());\nvar Step = styled.View(_templateObject6());\nvar styles = StyleSheet.create({\n  map: {\n    height: 200\n  }\n});\nexport default connect(null, {\n  setCurrLocation: setCurrLocation,\n  setRevGeoCode: setRevGeoCode\n})(HostingStep3);","map":{"version":3,"sources":["C:/Users/Stian/Documents/react-native-airbnb-clone-master/airbnb/app/screens/HostingStep3.js"],"names":["React","useState","Location","AppForm","LocationPicker","Button","DefaultInput","styled","H","colors","connect","setCurrLocation","setRevGeoCode","keyboardVerticalOffset","Platform","OS","HostingStep3","props","location","setLocation","address","setAddress","getAddress","reverseGeocodeAsync","addy","console","log","getLocation","requestPermissionsAsync","granted","getLastKnownPositionAsync","coords","latitude","longitude","getCurrLocation","setNewAddress","text","name","newArray","newAddress","onNavigate","navigation","navigate","flex","price","description","values","paddingTop","red","country","region","city","postalCode","Container","View","Main","ScrollView","Next","faintgray","Left","BtnContainer","Step","styles","StyleSheet","create","map","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Modal, Text, KeyboardAvoidingView } from \"react-native\";\nimport * as Location from \"expo-location\";\n\n//import components\nimport AppForm from \"../components/forms/AppForm\";\nimport LocationPicker from \"../components/LocationPicker\";\nimport * as Button from \"../components/Button\";\nimport { DefaultInput } from \"../components/forms/AppInput\";\n\n//import styles and assets\nimport styled from \"styled-components\";\nimport { H } from \"../config/Typography\";\nimport colors from \"../config/colors\";\n\n//import redux\nimport { connect } from \"react-redux\";\nimport { setCurrLocation, setRevGeoCode } from \"../store/host\";\n\nconst keyboardVerticalOffset = Platform.OS === \"ios\" ? 80 : 80;\n\nconst HostingStep3 = (props) => {\n  const [location, setLocation] = useState({});\n  const [address, setAddress] = useState([]);\n\n  const getAddress = async (location) => {\n    let addy = await Location.reverseGeocodeAsync(location);\n    console.log(addy);\n    setAddress(addy);\n  };\n\n  const getLocation = async () => {\n    const { granted } = await Location.requestPermissionsAsync();\n    if (!granted) return;\n    const {\n      coords: { latitude, longitude },\n    } = await Location.getLastKnownPositionAsync();\n    setLocation({ latitude, longitude });\n    location && getAddress({ latitude, longitude });\n  };\n\n  const getCurrLocation = () => {\n    getLocation();\n  };\n\n  const setNewAddress = (text, name) => {\n    let newArray = [...address];\n    let newAddress = { ...newArray[0] };\n    newAddress[name] = text;\n    newArray[0] = newAddress;\n    setAddress(newArray);\n  };\n\n  const onNavigate = () => {\n    props.setCurrLocation(location);\n    props.setRevGeoCode(address[0]);\n    props.navigation.navigate(\"HostingStep4\");\n  };\n\n  return (\n    <Container>\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior=\"padding\"\n        keyboardVerticalOffset={keyboardVerticalOffset}\n      >\n        <Main>\n          <H>숙소가 어디에 있나요?</H>\n          <AppForm\n            initialValues={{ name: \"\", price: \"\", description: \"\" }}\n            onSubmit={(values) => console.log(values)}\n          >\n            <Step style={{ paddingTop: 20 }}>\n              <Button.BtnText\n                label=\"현재위치 사용하기\"\n                color={colors.red}\n                onPress={() => getCurrLocation()}\n              />\n            </Step>\n            <Step>\n              <Text></Text>\n            </Step>\n            <Step>\n              <Text>국가/지역</Text>\n              <DefaultInput\n                name=\"country\"\n                value={address[0] && address[0].country}\n                onChangeText={(text) => setNewAddress(text, \"country\")}\n              />\n            </Step>\n            <Step>\n              <Text>주</Text>\n              <DefaultInput\n                name=\"region\"\n                value={address[0] && address[0].region}\n                onChangeText={(text) => setNewAddress(text, \"region\")}\n              />\n            </Step>\n            <Step>\n              <Text>시/군/구</Text>\n              <DefaultInput\n                name=\"city\"\n                value={address[0] && address[0].city}\n                onChangeText={(text) => setNewAddress(text, \"city\")}\n              />\n            </Step>\n            <Step>\n              <Text>도로명 주소</Text>\n              <DefaultInput\n                name=\"name\"\n                value={address[0] && address[0].name}\n                onChangeText={(text) => setNewAddress(text, \"name\")}\n              />\n            </Step>\n            <Step>\n              <Text>우편번호</Text>\n              <DefaultInput\n                name=\"postalCode\"\n                value={address[0] && address[0].postalCode}\n                onChangeText={(text) => setNewAddress(text, \"postalCode\")}\n              />\n            </Step>\n            {/* <Modal visible={openModal} animationType=\"slide\">\n              <LocationPicker\n                location={location}\n                closeBtn={() => setOpenmodal(false)}\n              />\n            </Modal> */}\n          </AppForm>\n        </Main>\n      </KeyboardAvoidingView>\n      <Next>\n        <Left></Left>\n        <BtnContainer>\n          <Button.BtnContain\n            label=\"다음\"\n            color={colors.red}\n            size=\"small\"\n            onPress={() => onNavigate()}\n          />\n        </BtnContainer>\n      </Next>\n    </Container>\n  );\n};\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: white;\n`;\n\nconst Main = styled.ScrollView`\n  flex: 1;\n  padding: 24px;\n`;\n\nconst Next = styled.View`\n  padding: 20px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-top-width: 1px;\n  border-top-color: ${colors.faintgray};\n  background-color: white;\n`;\n\nconst Left = styled.View``;\n\nconst BtnContainer = styled.View`\n  width: 30%;\n`;\n\nconst Step = styled.View`\n  margin: 20px 0;\n`;\n\nconst styles = StyleSheet.create({\n  map: {\n    height: 200,\n  },\n});\n\nexport default connect(null, { setCurrLocation, setRevGeoCode })(HostingStep3);\n"]},"metadata":{},"sourceType":"module"}